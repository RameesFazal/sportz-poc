plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
}

apply from : 'dependencies.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.sportz"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.sportz.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

hilt {
    enableTransformForLocalTests = true
}

dependencies {
    implementation "androidx.core:core-ktx:${coreKtxVersion}"
    implementation "androidx.appcompat:appcompat:${appCompactVersion}"
    implementation "com.google.android.material:material:${materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"
    implementation "androidx.core:core-splashscreen:${splashScreenVersion}"
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.gson
    implementation roomDependencies.common
    implementation roomDependencies.ktx
    implementation roomDependencies.runtime
    implementation "androidx.legacy:legacy-support-v4:${legacySupportVersion}"
    kapt "androidx.room:room-compiler:${roomVersion}"
    //hilt
    implementation "com.google.dagger:hilt-android:${hiltVersion}"
    kapt("com.google.dagger:hilt-android-compiler:${hiltVersion}")
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${hiltComposeVersion}"
    kapt "androidx.hilt:hilt-compiler:${hiltComposeVersion}"
    implementation "androidx.hilt:hilt-navigation-compose:${hiltComposeVersion}"

    //navigation
    implementation navigationDependencies.fragment
    implementation navigationDependencies.ui
    implementation "com.squareup.picasso:picasso:${picassoVersion}"
    implementation "com.github.corouteam:GlideToVectorYou:${glideVersion}"

    testImplementation "junit:junit:${junitVersion}"
    androidTestImplementation "androidx.test.ext:junit:${extJunitVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoCoreVersion}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesTestVersion}"
    androidTestImplementation "com.google.truth:truth:${truthVersion}"
    androidTestImplementation "androidx.arch.core:core-testing:${coreTestingVersion}"
    androidTestImplementation("com.google.dagger:hilt-android-testing:${hiltVersion}")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:${hiltVersion}")
}